"use strict";angular.module("Legend",[]);
"use strict";!function(angular){angular.module("Legend").controller("LegendController",["$scope","$q","LegendService",function($scope,$q,LegendService){$scope.model={user1:"mikemajesty",user2:"celso-wood"},$scope.compare=function(){var getUser1Repository=LegendService.getRepository($scope.model.user1),getUser2Repository=LegendService.getRepository($scope.model.user2);$q.all([getUser1Repository,getUser2Repository]).then(function(data){var user1Result=data[0];console.log("repositorio: mikemajesty",user1Result);var user2Result=data[1];console.log("repositorio: celso-wo",user2Result)})}}])}(window.angular);
"use strict";!function(angular){angular.module("Legend").controller("LegendController",["$scope","$q","LegendService",function($scope,$q,LegendService){$scope.model={user1:"mikemajestys",user2:"celso-wo"},$scope.compare=function(){var getUser1Repository=LegendService.getRepository($scope.model.user1),getUser2Repository=LegendService.getRepository($scope.model.user2);$q.all([getUser1Repository,getUser2Repository]).then(function(data){var user1Result=data[0];console.log("repositorio: mikemajesty",user1Result);var user2Result=data[1];console.log("repositorio: celso-wo",user2Result)})}}])}(window.angular);
"use strict";!function(angular){angular.module("Legend").factory("LegendService",["$http",function($http){var findUser=function(userName){return $http.post("/user",{username:userName}).then(function(res){return res.data})},findStreak=function(userName){return $http.post("/streak",{username:userName}).then(function(res){var currentStreak=[];return res.data.filter(function(data){var date=data.date.split("-");return new Date(date[0],date[1],date[2],0,0,0,0).getTime()<(new Date).getTime()}).forEach(function(data,index){var date=data.date,currentCommit=data.commit,lastCommit=0;"mikemajesty"===userName&&console.log("currentCommit: "+currentCommit+" - lastCommit: "+lastCommit+" - date: "+date),currentCommit>0&&lastCommit>0||0===index?currentStreak.push({date:date,commit:currentCommit}):currentStreak=[],lastCommit=data.commit}),currentStreak})},getRepository=function(userName){return $http.post("/repository",{username:userName}).then(function(res){return res.data})};return{findUser:findUser,findStreak:findStreak,getRepository:getRepository}}])}(window.angular);
"use strict";!function(angular){angular.module("Legend").factory("LegendService",["$http",function($http){var findUser=function(userName){return $http.post("/user",{username:userName}).then(function(res){return res.data})},findStreak=function(userName){return $http.post("/streak",{username:userName}).then(function(res){var currentStreak=[];return res.data.filter(function(data){var date=data.date.split("-");return new Date(date[0],date[1],date[2],0,0,0,0).getTime()<(new Date).getTime()}).forEach(function(data,index){var date=data.date,currentCommit=data.commit,lastCommit=0;"mikemajesty"===userName&&console.log("currentCommit: "+currentCommit+" - lastCommit: "+lastCommit+" - date: "+date),currentCommit>0&&lastCommit>0||0===index?currentStreak.push({date:date,commit:currentCommit}):currentStreak=[],lastCommit=data.commit}),currentStreak})},getRepository=function(userName){return $http.post("/repository",{username:userName}).then(function(res){return res.data})};return{findUser:findUser,findStreak:findStreak,getRepository:getRepository}}])}(window.angular);